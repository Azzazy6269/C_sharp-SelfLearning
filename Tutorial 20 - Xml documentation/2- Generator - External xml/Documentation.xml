<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Generator</name>
    </assembly>
    <members>
        <member name="T:Generator">
            <summary>
            The main Generator class
            <remark>
            this class can generate employee IDs and random passwords
            </remark>
            </summary>
        </member>
        <member name="P:Generator.LastSequence">
            <value>Value of the last sequence ID </value>
        </member>
        <member name="M:Generator.GenerateID(System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Generate employee id by processing <paramref name="fname"/> , <paramref name="lname"/> , <paramref name="hireDate"/> 
            </summary>
            <remarks>
            <list type="bullet">
            <item> <description> II : ID initials with first letter of <paramref name="fname"/> and <paramref name="lname"/>  </description> </item>
            <item> <description> YY : then 2 digits of year from <paramref name="hireDate"/> </description> </item>
            <item> <description> MM : then 2 digits of Month from <paramref name="hireDate"/> </description> </item>
            <item> <description> DD : then 2 digits of Day from <paramref name="hireDate"/> </description> </item>
            <item> <description> 01 : then LastSequence+1 <paramref name="hireDate"/> </description> </item>
            </list>
            </remarks>
            <param name="fname"></param>
            <param name="lname"></param>
            <param name="hireDate"></param>
            <example>
            <code>
            var MohsenID =  Generator.GenerateID("Mohsen", "Khaleel", new DateTime(2025,6,1,0,0,0));
            Console.WriteLine(MohsenID);
            </code>
            </example>
            <returns>
            employee ID as a string
            </returns>
            <exception cref="T:System.InvalidOperationException"> Thrown when <paramref name="fname"/> or <paramref name="lname"/> is null </exception>
            <exception cref="T:System.Exception"> Thrown when <paramref name="hireDate"/> is  higher than DateTime.Now.Date </exception>
            See <see cref="M:Generator.GeneratePassword(System.Int32)"/> to generate random password
        </member>
        <member name="M:Generator.GeneratePassword(System.Int32)">
            <summary>
            Generate random password with the length of parameter <paramref name ="length"/> 
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
    </members>
</doc>
